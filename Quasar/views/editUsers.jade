//- ============================================================================
//-  Copyright   : DataSoft Corporation 2011-2013
//-  Nova is free software: you can redistribute it and/or modify
//-   it under the terms of the GNU General Public License as published by
//-   the Free Software Foundation, either version 3 of the License, or
//-   (at your option) any later version.
//-
//-   Nova is distributed in the hope that it will be useful,
//-   but WITHOUT ANY WARRANTY; without even the implied warranty of
//-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//-   GNU General Public License for more details.
//-
//-   You should have received a copy of the GNU General Public License
//-   along with Nova.  If not, see <http://www.gnu.org/licenses/>.
//- ============================================================================

extends layout

block headerAdditions
  link(rel="stylesheet", type="text/css", href="configstyle.css", media="screen")
  link(rel="stylesheet", type="text/css", href="/dojo/dojox/grid/resources/Grid.css")
  link(rel="stylesheet", type="text/css", href="/dojo/dojox/grid/resources/claroGrid.css")

  script
    var grid;
    
    function deleteSelectedItems()
    {
      var numberOfNames = #{usernames.length}
      var items = grid.selection.getSelected();
        
        if (items.length >= numberOfNames)
        {
            var dialog = new dijit.Dialog({title: "Error", content: "You can not delete all user accounts! It will be impossible to log in."});
            dialog.show();  
            return;
        }
      var names = [];
      dojo.forEach(items, function(selectedItem)
      {
        names.push(grid.store.getValues(selectedItem, "users")); 
      });
      
      try {
        now.deleteUserEntry(names, errorMessageCallback);
      } catch(err)
      {
        alert("Action failed! Unable to connect to server. Try refreshing the page.");
        console.log("Caught error was: " + err);
      }
    }

    function updateUserPass()
    {
        var items = grid.selection.getSelected();

        if (items.length != 1)
        {
            var dialog = new dijit.Dialog({title: "Error", content: "Please select 1 user account to edit the password of"});
            dialog.show();  
            return;
        }
        
        var user = String(grid.store.getValues(items[0], "users")); 
        var password = dojo.byId("newPassword").value;
        try {
            now.updateUserPassword(user, password, errorMessageCallback);
         } catch(err)
         {
           alert("Action failed! Unable to connect to server. Try refreshing the page.");
           console.log("Caught error was: " + err);
         }
    }

    
    function errorMessageCallback(success, message)
    {
      console.log('in errorMessageCallback');
      if(success != true)
      {
        var dialog = new dijit.Dialog({title: "Error", content: "Unable to complete operation due to error: " + message});
        dialog.show();
        return;
      }
      location.reload(true);
    }

    function init()
    {
        require(["dojox/grid/DataGrid","dojo/data/ObjectStore","dojox/data/HtmlStore", "dijit/Dialog"],
            function(DataGrid,ObjectStore){
              var gridStore = new dojox.data.HtmlStore({dataId:"profileTable"});
              grid = new dojox.grid.DataGrid({store:gridStore,structure:'layoutProfiles',query:{},rowsPerPage:40, autoWidth:true});
              dojo.byId("gridDiv").appendChild(grid.domNode);
        });
    }
  
  script(type="text/javascript")
          /*set up data store*/
          var layoutProfiles = [[
            { field: "users", name: "User", width: '500px' },
          ]];

block content
  h1 Existing User Accounts
  table#profileTable(style="display: none")
    thead
      tr
        th users
    tbody
      each name, i in usernames
        tr
          td #{name}
 
  div(style="height: 250px;")
    div#gridDiv(style="height: 250px")

  br
  button(onClick="deleteSelectedItems()")
    img.buttonIcon(src="images/delete.png")
    span.buttonSpan Delete Selected Users
  
  br
  br
  input#newPassword(type="password")
  button(onClick="updateUserPass()") 
    img.buttonIcon(src="images/edit.png")
    span.buttonSpan Update User Password
 

