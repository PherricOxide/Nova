//- ============================================================================
//-  Copyright   : DataSoft Corporation 2011-2013
//-  Nova is free software: you can redistribute it and/or modify
//-   it under the terms of the GNU General Public License as published by
//-   the Free Software Foundation, either version 3 of the License, or
//-   (at your option) any later version.
//-
//-   Nova is distributed in the hope that it will be useful,
//-   but WITHOUT ANY WARRANTY; without even the implied warranty of
//-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//-   GNU General Public License for more details.
//-
//-   You should have received a copy of the GNU General Public License
//-   along with Nova.  If not, see <http://www.gnu.org/licenses/>.
//- ============================================================================

extends layout

block headerAdditions
    script
        // TODO: Get initial state from RPC 
        var trainingStarted = false;
        var buttonElement;
        var statusElement;
        var sessionNameElement;

        var toggleTrainingCapture = function()
        {
          try {
            now.GetCaptureSession(function(ret) {console.log(ret)} );
          } catch(err)
          {
            alert("Action failed! Unable to connect to server. Try refreshing the page.");
            console.log("Caught error was: " + err);
          }
            
            if (sessionNameElement.value == "")
            {
                alert("Training session name can not be blank");
                return;
            }

            if (!trainingStarted)
            {
                statusElement.innerHTML = "Status: Starting data capture...";
                buttonElement.disabled = true;

                try {
                    now.StartTrainingCapture(sessionNameElement.value, trainingCaptureStarted); 
                } catch(err)
                {
                    alert("Action failed! Unable to connect to server. Try refreshing the page.");
                    console.log("Caught error was: " + err);
                }
                trainingStarted = true;
            } else {
                statusElement.innerHTML = "Status: Stopping data capture...";
                buttonElement.disabled = true;
          
                try {
                    now.StopTrainingCapture(sessionNameElement.value, trainingCaptureStopped);
                } catch(err)
                {
                    alert("Action failed! Unable to connect to server. Try refreshing the page.");
                    console.log("Caught error was: " + err);
                }
                trainingStarted = false;

            }
        }

        var trainingCaptureStarted = function(result)
        {
            if (result != undefined && result != "")
            {
                alert("Unable to start training capture due to error: " + result);
                trainingStarted = false;
                buttonElement.innerHTML = "Start Training Capture";
                buttonElement.disabled = false;
                statusElement.innerHTML = "Status: Not capturing training data";
                return;
            }
            buttonElement.innerHTML = "Stop Training Capture";
            buttonElement.disabled = false;
            statusElement.innerHTML = "Status: Capturing training data";
        }
    
        var trainingCaptureStopped = function(result)
        {
            buttonElement.innerHTML = "Start training Capture";
            buttonElement.disabled = false;
            statusElement.innerHTML = "Status: Capture session stopped";
            alert("Output from novatrainer:" + result);
            window.location = "/importCapture?trainingSession=" + sessionNameElement.value;
        }

        function() init{
            trainingStarted = false;
            buttonElement = document.getElementById("toggleButton");
            statusElement = document.getElementById("status");
            sessionNameElement = document.getElementById("sessionName");
            
            now.ready( function()
            {
                try {
                now.GetCaptureSession( function(ret)
                {
                    if (ret != "null" && ret != "undefined" && ret != "")
                    {
                        buttonElement.innerHTML = "Stop Training Capture";
                        buttonElement.disabled = false;
                        trainingStarted = true;
                        statusElement.innerHTML = "Status: Capturing training data";
                        sessionNameElement.value = ret;
                    }
                });

                } catch(err)
                {
                    alert("Action failed! Unable to connect to server. Try refreshing the page.");
                    console.log("Caught error was: " + err);
                }
            });


        };

block content
  p Note: This will stop any currently running instances of nova. It is not recommended to leave this page while the capture is running.
  div(style="text-align:center")
    label Name of training session
    br
    input#sessionName(type="text", value = "") 
    p#status Status: Not capturing data
    button#toggleButton(onClick='toggleTrainingCapture()') Start Training Capture
